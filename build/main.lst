ARM GAS  /tmp/cctxz9Zi.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SystemClock_Config,"ax",%progbits
  17              		.align	1
  18              		.global	SystemClock_Config
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	SystemClock_Config:
  26              	.LFB146:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * @file    USB_Device/CustomHID_Standalone/Src/main.c
   4:Src/main.c    ****   * @author  MCD Application Team
   5:Src/main.c    ****   * @version V1.4.0
   6:Src/main.c    ****   * @date    29-April-2016
   7:Src/main.c    ****   * @brief   USB device CustomHID application main file.
   8:Src/main.c    ****   ******************************************************************************
   9:Src/main.c    ****   * @attention
  10:Src/main.c    ****   *
  11:Src/main.c    ****   * <h2><center>&copy; Copyright ï¿½ 2016 STMicroelectronics International N.V.
  12:Src/main.c    ****   * All rights reserved.</center></h2>
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without
  15:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  16:Src/main.c    ****   *
  17:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice,
  18:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  19:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *    and/or other materials provided with the distribution.
  22:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other
  23:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products
  24:Src/main.c    ****   *    derived from this software without specific written permission.
  25:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this
  26:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  27:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  28:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under
  29:Src/main.c    ****   *    this license is void and will automatically terminate your rights under
  30:Src/main.c    ****   *    this license.
  31:Src/main.c    ****   *
ARM GAS  /tmp/cctxz9Zi.s 			page 2


  32:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS"
  33:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT
  34:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  35:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  36:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT
  37:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  38:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  39:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  40:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  41:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  42:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  43:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  44:Src/main.c    ****   *
  45:Src/main.c    ****   ******************************************************************************
  46:Src/main.c    ****   */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  49:Src/main.c    **** #include "main.h"
  50:Src/main.c    **** #include "usbd_cdc.h"
  51:Src/main.c    **** #include "usbd_cdc_io.h"
  52:Src/main.c    **** #include "usbd_hid.h"
  53:Src/main.c    **** 
  54:Src/main.c    **** extern const USBD_ClassTypeDef USBD_HANDLER;
  55:Src/main.c    **** 
  56:Src/main.c    **** void I2C_Run_In_Thread_Mode();
  57:Src/main.c    **** 
  58:Src/main.c    **** /** @addtogroup STM32F7xx_HAL_Validation
  59:Src/main.c    ****   * @{
  60:Src/main.c    ****   */
  61:Src/main.c    **** 
  62:Src/main.c    **** /** @addtogroup STANDARD_CHECK
  63:Src/main.c    ****   * @{
  64:Src/main.c    ****   */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  67:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  68:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  69:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  70:Src/main.c    **** USBD_HandleTypeDef USBD_Device;
  71:Src/main.c    **** 
  72:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  73:Src/main.c    **** void SystemClock_Config(void);
  74:Src/main.c    **** 
  75:Src/main.c    **** 
  76:Src/main.c    **** /* Private functions ---------------------------------------------------------*/
  77:Src/main.c    **** 
  78:Src/main.c    **** /**
  79:Src/main.c    ****   * @brief  Main program.
  80:Src/main.c    ****   * @param  None
  81:Src/main.c    ****   * @retval None
  82:Src/main.c    ****   */
  83:Src/main.c    **** int main(void)
  84:Src/main.c    **** {
  85:Src/main.c    ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Src/main.c    ****     HAL_Init();
  87:Src/main.c    **** 
  88:Src/main.c    ****     /* Configure the system clock to 72 MHz */
ARM GAS  /tmp/cctxz9Zi.s 			page 3


  89:Src/main.c    ****     SystemClock_Config();
  90:Src/main.c    **** 
  91:Src/main.c    ****     /* Init Device Library */
  92:Src/main.c    **** //    USBD_Init(&USBD_Device, &HID_Desc, 0);
  93:Src/main.c    **** 
  94:Src/main.c    ****     /* Add Supported Class */
  95:Src/main.c    **** //    USBD_RegisterClass(&USBD_Device, &USBD_HANDLER);
  96:Src/main.c    **** 
  97:Src/main.c    ****     /* Start Device Process */
  98:Src/main.c    ****     USBD_Start(&USBD_Device);
  99:Src/main.c    **** 
 100:Src/main.c    ****     /* Infinite loop */
 101:Src/main.c    ****     while (1)
 102:Src/main.c    ****     {
 103:Src/main.c    ****  //       HID_Run_In_Thread_Mode();
 104:Src/main.c    **** //        CDC_Run_In_Thread_Mode();
 105:Src/main.c    ****         I2C_Run_In_Thread_Mode();
 106:Src/main.c    ****     }
 107:Src/main.c    **** }
 108:Src/main.c    **** 
 109:Src/main.c    **** /**
 110:Src/main.c    ****   * @brief  System Clock Configuration
 111:Src/main.c    ****   *         The system Clock is configured as follow :
 112:Src/main.c    ****   *            System Clock source            = PLL (HSE)
 113:Src/main.c    ****   *            SYSCLK(Hz)                     = 72000000
 114:Src/main.c    ****   *            HCLK(Hz)                       = 72000000
 115:Src/main.c    ****   *            AHB Prescaler                  = 1
 116:Src/main.c    ****   *            APB1 Prescaler                 = 2
 117:Src/main.c    ****   *            APB2 Prescaler                 = 1
 118:Src/main.c    ****   *            HSE Frequency(Hz)              = 8000000
 119:Src/main.c    ****   *            HSE PREDIV1                    = 1
 120:Src/main.c    ****   *            PLLMUL                         = 9
 121:Src/main.c    ****   *            Flash Latency(WS)              = 2
 122:Src/main.c    ****   * @param  None
 123:Src/main.c    ****   * @retval None
 124:Src/main.c    ****   */
 125:Src/main.c    **** void SystemClock_Config(void)
 126:Src/main.c    **** {
  28              		.loc 1 126 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
 127:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  36              		.loc 1 127 3 view .LVU1
 128:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  37              		.loc 1 128 3 view .LVU2
 129:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
  38              		.loc 1 129 3 view .LVU3
 130:Src/main.c    **** 
 131:Src/main.c    ****   /** Configure the main internal regulator output voltage
 132:Src/main.c    ****   */
 133:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  39              		.loc 1 133 3 view .LVU4
ARM GAS  /tmp/cctxz9Zi.s 			page 4


  40              	.LBB2:
  41              		.loc 1 133 3 view .LVU5
  42              		.loc 1 133 3 view .LVU6
  43 0002 0B4B     		ldr	r3, .L3
  44 0004 1A6C     		ldr	r2, [r3, #64]
  45 0006 42F08052 		orr	r2, r2, #268435456
  46 000a 1A64     		str	r2, [r3, #64]
  47              		.loc 1 133 3 view .LVU7
  48 000c 1B6C     		ldr	r3, [r3, #64]
  49 000e 03F08053 		and	r3, r3, #268435456
  50 0012 0093     		str	r3, [sp]
  51              		.loc 1 133 3 view .LVU8
  52 0014 009B     		ldr	r3, [sp]
  53              	.LBE2:
  54              		.loc 1 133 3 view .LVU9
 134:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  55              		.loc 1 134 3 view .LVU10
  56              	.LBB3:
  57              		.loc 1 134 3 view .LVU11
  58              		.loc 1 134 3 view .LVU12
  59 0016 074B     		ldr	r3, .L3+4
  60 0018 1A68     		ldr	r2, [r3]
  61 001a 42F44042 		orr	r2, r2, #49152
  62 001e 1A60     		str	r2, [r3]
  63              		.loc 1 134 3 view .LVU13
  64 0020 1B68     		ldr	r3, [r3]
  65 0022 03F44043 		and	r3, r3, #49152
  66 0026 0193     		str	r3, [sp, #4]
  67              		.loc 1 134 3 view .LVU14
  68 0028 019B     		ldr	r3, [sp, #4]
  69              	.LBE3:
  70              		.loc 1 134 3 view .LVU15
 135:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 136:Src/main.c    ****   */
 137:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  71              		.loc 1 137 3 view .LVU16
 138:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
  72              		.loc 1 138 3 view .LVU17
 139:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  73              		.loc 1 139 3 view .LVU18
 140:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  74              		.loc 1 140 3 view .LVU19
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 8;
  75              		.loc 1 141 3 view .LVU20
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 432;
  76              		.loc 1 142 3 view .LVU21
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  77              		.loc 1 143 3 view .LVU22
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 9;
  78              		.loc 1 144 3 view .LVU23
 145:Src/main.c    ****  /** Activate the Over-Drive mode
 146:Src/main.c    ****   */
 147:Src/main.c    **** 
 148:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks
 149:Src/main.c    ****   */
 150:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  79              		.loc 1 150 3 view .LVU24
ARM GAS  /tmp/cctxz9Zi.s 			page 5


 151:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 152:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  80              		.loc 1 152 3 view .LVU25
 153:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  81              		.loc 1 153 3 view .LVU26
 154:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
  82              		.loc 1 154 3 view .LVU27
 155:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
  83              		.loc 1 155 3 view .LVU28
 156:Src/main.c    **** 
 157:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_CLK48;
  84              		.loc 1 157 3 view .LVU29
 158:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
  85              		.loc 1 158 3 view .LVU30
 159:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
  86              		.loc 1 159 3 view .LVU31
 160:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
  87              		.loc 1 160 3 view .LVU32
 161:Src/main.c    ****   PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV8;
  88              		.loc 1 161 3 view .LVU33
 162:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivQ = 1;
  89              		.loc 1 162 3 view .LVU34
 163:Src/main.c    ****   PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
  90              		.loc 1 163 3 view .LVU35
 164:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLLSAIP;
  91              		.loc 1 164 3 view .LVU36
 165:Src/main.c    **** }
  92              		.loc 1 165 1 is_stmt 0 view .LVU37
  93 002a 02B0     		add	sp, sp, #8
  94              	.LCFI1:
  95              		.cfi_def_cfa_offset 0
  96              		@ sp needed
  97 002c 7047     		bx	lr
  98              	.L4:
  99 002e 00BF     		.align	2
 100              	.L3:
 101 0030 00380240 		.word	1073887232
 102 0034 00700040 		.word	1073770496
 103              		.cfi_endproc
 104              	.LFE146:
 106              		.section	.text.main,"ax",%progbits
 107              		.align	1
 108              		.global	main
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu fpv5-d16
 114              	main:
 115              	.LFB145:
  84:Src/main.c    ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 116              		.loc 1 84 1 is_stmt 1 view -0
 117              		.cfi_startproc
 118              		@ Volatile: function does not return.
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 08B5     		push	{r3, lr}
 122              	.LCFI2:
ARM GAS  /tmp/cctxz9Zi.s 			page 6


 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 3, -8
 125              		.cfi_offset 14, -4
  86:Src/main.c    **** 
 126              		.loc 1 86 5 view .LVU39
 127 0002 FFF7FEFF 		bl	HAL_Init
 128              	.LVL0:
  89:Src/main.c    **** 
 129              		.loc 1 89 5 view .LVU40
 130 0006 FFF7FEFF 		bl	SystemClock_Config
 131              	.LVL1:
  98:Src/main.c    **** 
 132              		.loc 1 98 5 view .LVU41
 133 000a 0348     		ldr	r0, .L8
 134 000c FFF7FEFF 		bl	USBD_Start
 135              	.LVL2:
 136              	.L6:
 101:Src/main.c    ****     {
 137              		.loc 1 101 5 discriminator 1 view .LVU42
 105:Src/main.c    ****     }
 138              		.loc 1 105 9 discriminator 1 view .LVU43
 139 0010 FFF7FEFF 		bl	I2C_Run_In_Thread_Mode
 140              	.LVL3:
 101:Src/main.c    ****     {
 141              		.loc 1 101 11 discriminator 1 view .LVU44
 142 0014 FCE7     		b	.L6
 143              	.L9:
 144 0016 00BF     		.align	2
 145              	.L8:
 146 0018 00000000 		.word	USBD_Device
 147              		.cfi_endproc
 148              	.LFE145:
 150              		.comm	USBD_Device,720,4
 151              		.text
 152              	.Letext0:
 153              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 154              		.file 3 "Drivers/CMSIS/Include/core_cm7.h"
 155              		.file 4 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 156              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f767xx.h"
 157              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 158              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 159              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 160              		.file 9 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 161              		.file 10 "/usr/include/newlib/sys/_types.h"
 162              		.file 11 "/usr/include/newlib/sys/reent.h"
 163              		.file 12 "/usr/include/newlib/sys/lock.h"
 164              		.file 13 "/usr/include/newlib/stdlib.h"
 165              		.file 14 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 166              		.file 15 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_core.h"
ARM GAS  /tmp/cctxz9Zi.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cctxz9Zi.s:17     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cctxz9Zi.s:25     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cctxz9Zi.s:101    .text.SystemClock_Config:0000000000000030 $d
     /tmp/cctxz9Zi.s:107    .text.main:0000000000000000 $t
     /tmp/cctxz9Zi.s:114    .text.main:0000000000000000 main
     /tmp/cctxz9Zi.s:146    .text.main:0000000000000018 $d
                            *COM*:00000000000002d0 USBD_Device

UNDEFINED SYMBOLS
HAL_Init
USBD_Start
I2C_Run_In_Thread_Mode
